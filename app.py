import os
from fastapi import FastAPI, Request
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
import logging

TOKEN = os.environ["BOT_TOKEN"]

WELCOME_TEXT = """
üöÄ LiveGood –µ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞ –∏–¥–µ—è, —á–∏–µ—Ç–æ –≤—Ä–µ–º–µ –¥–æ–π–¥–µ!

üß¨ –¢–æ–≤–∞ –µ —Å—ä–≤—Ä–µ–º–µ–Ω–µ–Ω –ø–æ–≥–ª–µ–¥ –∫—ä–º –∑–¥—Ä–∞–≤–µ—Ç–æ –∏ –Ω–∞—á–∏–Ω–∞ –Ω–∞ –∂–∏–≤–æ—Ç, –±–∞–∑–∏—Ä–∞–Ω –Ω–∞ –¥–æ—Å—Ç—ä–ø–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ —Å –ø—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ.

üë©‚Äçüíº –ö–∞–∑–≤–∞–º —Å–µ –ò–ª–∏—è–Ω–∞ –ö–æ—Å—Ç–∞–¥–∏–Ω–æ–≤–∞ –∏ –≤–∏ –∫–∞–Ω—è –¥–∞ —Å—Ç–∞–Ω–µ—Ç–µ —á–∞—Å—Ç –æ—Ç –∫–ª—É–±–∞ –Ω–∞ –∑–¥—Ä–∞–≤–∏ –∏ —É—Å–ø–µ—à–Ω–∏ —Ö–æ—Ä–∞.

üèÜ –ê–∑ —Å—ä–º –ª–∏–¥–µ—Ä –≤ –∫–æ–º–ø–∞–Ω–∏—è—Ç–∞ LiveGood –∏ —Å —Ä–∞–¥–æ—Å—Ç –≤–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∞–º –≤ –º–æ—è Telegram –±–æ—Ç.

üîç –¢—É–∫ —â–µ –æ—Ç–∫—Ä–∏–µ—Ç–µ —Ü—è–ª–∞—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞:
‚úÖ –Ω–∞—à–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏
‚úÖ –≤—ä–∑–º–æ–∂–Ω–æ—Å—Ç—Ç–∞ –¥–∞ –∏–∑–≥—Ä–∞–¥–∏—Ç–µ —É—Å–ø–µ—à–µ–Ω –∏ –ø–µ—á–µ–ª–∏–≤—à –±–∏–∑–Ω–µ—Å

üí° –°—ä—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ—Ç–æ —Å LiveGood –º–æ–∂–µ –¥–∞ –±—ä–¥–µ —Å—Ç—ä–ø–∫–∞—Ç–∞, –∫–æ—è—Ç–æ —â–µ –ø—Ä–æ–º–µ–Ω–∏ –≤–∞—à–µ—Ç–æ –±—ä–¥–µ—â–µ.

‚ùì –ü–∏—Ç–∞–π—Ç–µ ‚Äì —â–µ –ø–æ–ª—É—á–∏—Ç–µ –ø—ä–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!
"""

COMPANY_TEXT = (
    "üè¢ LiveGood –µ –∫–æ–º–ø–∞–Ω–∏—è, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–∞ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ—Ç–æ –∏ –ø—Ä–æ–¥–∞–∂–±–∞—Ç–∞ –Ω–∞ –ø—Ä–µ–º–∏—É–º —Ö—Ä–∞–Ω–∏—Ç–µ–ª–Ω–∏ –¥–æ–±–∞–≤–∫–∏.\n\n"
    "üéØ –ù–∞—à–∞—Ç–∞ –º–∏—Å–∏—è –µ –¥–∞ –Ω–∞–ø—Ä–∞–≤–∏–º –∑–¥—Ä–∞–≤–µ—Ç–æ –∏ –±–ª–∞–≥–æ—Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –¥–æ—Å—Ç—ä–ø–Ω–∏ –∑–∞ –≤—Å–∏—á–∫–∏, –∫–∞—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–º–µ –ø—Ä–æ–¥—É–∫—Ç–∏ –Ω–∞ —Ä–∞–∑—É–º–Ω–∏ —Ü–µ–Ω–∏.\n\n"
    "üåê –í —Å–∞–π—Ç–∞ –º–æ–∂–µ—à –¥–∞ —Ä–∞–∑–≥–ª–µ–¥–∞—à —Ü–µ–Ω–∏ –∫–∞–∫—Ç–æ –∑–∞ —á–ª–µ–Ω–æ–≤–µ, —Ç–∞–∫–∞ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ç–µ —Ü–µ–Ω–∏ –∑–∞ —Ä–µ–¥–æ–≤–µ–Ω –∫—É–ø—É–≤–∞—á. –°–ª–µ–¥ —Ç–æ–≤–∞ —Å–µ –≤—ä—Ä–Ω–∏ —Ç—É–∫ –∑–∞ –ø–æ–≤–µ—á–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. üôÇ\n\n"
    "üëâ –†–∞–∑–≥–ª–µ–¥–∞–π —Å–∞–π—Ç–∞ –æ—Ç—Ç—É–∫: https://livegood.com/ilyyy12"
)

PRODUCTS_TEXT = (
    "üõí –ü—Ä–æ–¥—É–∫—Ç–∏:\n"
    "‚Ä¢ Bio-Active Complete Multi-Vitamin for Men\n"
    "‚Ä¢ Bio-Active Multi-Vitamin for Women with Iron\n"
    "‚Ä¢ Vitamin D3 and K2\n"
    "‚Ä¢ Ultra Magnesium Complex\n"
    "‚Ä¢ Complete Plant-Based Protein\n"
    "‚Ä¢ Organic Super Greens\n"
    "‚Ä¢ Factor4\n"
    "‚Ä¢ Daily Essentials Pack\n"
    "‚Ä¢ Lean Body Pack\n"
    "‚Ä¢ Ultimate Wellness Pack\n"
    "‚Ä¢ Skin Care Pack\n"
    "‚Ä¢ Maximum Energy Pack\n"
    "‚Ä¢ Everything Pack"
)

MARKETING_STEPS = [
    "üëã –î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ LiveGood!\n\nLiveGood –µ –∏–Ω–æ–≤–∞—Ü–∏–æ–Ω–µ–Ω –∫–ª—É–±, —Å—ä–∑–¥–∞–¥–µ–Ω, –∑–∞ –¥–∞ –≤–∏ –ø–æ–º–æ–≥–Ω–µ –¥–∞ –≤–æ–¥–∏—Ç–µ –∑–¥—Ä–∞–≤–æ—Å–ª–æ–≤–µ–Ω –Ω–∞—á–∏–Ω –Ω–∞ –∂–∏–≤–æ—Ç, –∏–∑–ø–æ–ª–∑–≤–∞–π–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ —Å –Ω–∞–π-–≤–∏—Å–æ–∫–æ –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –¥–æ—Å—Ç—ä–ø–Ω–∏ —Ü–µ–Ω–∏.",
    "ü§ù –ö–∞–∫–≤–æ –µ –∫–ª—É–± LiveGood?\n\n–¢–æ–≤–∞ –µ –µ–∫—Å–∫–ª—É–∑–∏–≤–Ω–∞ –∫–ª—É–±–Ω–∞ —Å–∏—Å—Ç–µ–º–∞, –≤ –∫–æ—è—Ç–æ –º–æ–∂–µ—Ç–µ –¥–∞ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—ä–ø –¥–æ –Ω–∞–π-–¥–æ–±—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑–∞ –∑–¥—Ä–∞–≤–µ —Å –∏–∫–æ–Ω–æ–º–∏—è –¥–æ 75%! –ß–ª–µ–Ω—Å—Ç–≤–æ—Ç–æ —Å—Ç—Ä—É–≤–∞ —Å–∞–º–æ $49,95 + $9,95 –º–µ—Å–µ—á–Ω–æ.",
    "‚öôÔ∏è –ö–∞–∫ —Ä–∞–±–æ—Ç–∏ —Ç–æ–≤–∞?\n\n1Ô∏è‚É£ –ü—Ä–∏—Å—ä–µ–¥–∏–Ω–µ—Ç–µ —Å–µ –∑–∞ $49,95.\n2Ô∏è‚É£ –ö—É–ø—É–≤–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–∏ —Å –æ—Ç—Å—Ç—ä–ø–∫–∞.\n3Ô∏è‚É£ –°–ø–æ–¥–µ–ª—è–π—Ç–µ –∏ –ø–µ—á–µ–ª–µ—Ç–µ!",
    "üí∏ –í—ä–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞ –ø–µ—á–∞–ª–±–∞:\n\n‚úÖ –†–µ—Ñ–µ—Ä–∞–ª–µ–Ω –±–æ–Ω—É—Å: $25\n‚úÖ –†–µ–∑–∏–¥—É–∞–ª–µ–Ω –¥–æ—Ö–æ–¥: –î–æ $2047,50/–º–µ—Å–µ—Ü\n‚úÖ –ë–æ–Ω—É—Å–∏ –∑–∞ —Ä–∞—Å—Ç–µ–∂: –î–æ 2% –æ—Ç –æ–±–æ—Ä–æ—Ç–∞ –ø—Ä–∏ —Ä–∞–Ω–≥ Diamond!",
    "üå± –ü—Ä–æ–¥—É–∫—Ç–∏ –Ω–∞ LiveGood\n\n–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏ –≤ –°–ê–© ‚Äì –≤–∏—Ç–∞–º–∏–Ω–∏, —Å—É–ø–µ—Ä—Ö—Ä–∞–Ω–∏, –∫–æ–∑–º–µ—Ç–∏–∫–∞ –∏ –¥—Ä.",
    "üéâ –ü—Ä–∏—Å—ä–µ–¥–∏–Ω–µ—Ç–µ —Å–µ –∫—ä–º LiveGood!\n\n–ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ —à–∞–Ω—Å–∞ –¥–∞ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ –∂–∏–≤–æ—Ç–∞ —Å–∏ –æ—â–µ –¥–Ω–µ—Å!\n\nüîì –ú–æ–∂–µ –¥–∞ —Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞—Ç–µ –ë–ï–ó–ü–õ–ê–¢–ù–û –∏ –¥–∞ —Å–µ –æ—Ç–ø–∏—à–µ—Ç–µ –ø–æ –≤—Å—è–∫–æ –≤—Ä–µ–º–µ!"
]

SOCIAL_BUTTONS = [
    [InlineKeyboardButton("üìò Facebook", url="https://www.facebook.com/profile.php?id=100024332053965")],
    [InlineKeyboardButton("üì∏ Instagram", url="https://www.instagram.com/ipetrova65/")]
]

MAIN_BUTTONS = [
    [InlineKeyboardButton("‚ÑπÔ∏è –ó–∞ –∫–æ–º–ø–∞–Ω–∏—è—Ç–∞", callback_data="company")],
    [InlineKeyboardButton("üß™ –ü—Ä–æ–¥—É–∫—Ç–∏", callback_data="products")],
    [InlineKeyboardButton("üìà –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", callback_data="marketing_0")],
    [InlineKeyboardButton("üì¨ –°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –º–µ–Ω", callback_data="contact")]
]

# --- Telegram handlers ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        with open("welcome.jpg", "rb") as photo:
            await update.message.reply_photo(photo)
    except Exception as e:
        print("–ù–µ –º–æ–∂–∞ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏ —Å–Ω–∏–º–∫–∞—Ç–∞:", e)

    await update.message.reply_text(WELCOME_TEXT, reply_markup=InlineKeyboardMarkup(MAIN_BUTTONS))

    try:
        with open("welcome.mp4", "rb") as video:
            await update.message.reply_video(video)
    except Exception as e:
        print("–ù–µ –º–æ–∂–∞ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏ –≤–∏–¥–µ–æ—Ç–æ:", e)
        await update.message.reply_text("üé• –í–∏–¥–µ–æ –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–æ –∏–ª–∏ –Ω–µ –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–æ.")

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message:
        await update.message.reply_text(
            "–ù–∞—Ç–∏—Å–Ω–µ—Ç–µ –±—É—Ç–æ–Ω–∞ –ø–æ-–¥–æ–ª—É –∑–∞ –Ω–∞—á–∞–ª–æ ‚¨áÔ∏è",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üöÄ –°—Ç–∞—Ä—Ç", callback_data="start")]])
        )

async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data == "start":
        try:
            with open("welcome.jpg", "rb") as photo:
                await query.message.reply_photo(photo)
        except Exception as e:
            print("–ù–µ –º–æ–∂–∞ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏ —Å–Ω–∏–º–∫–∞—Ç–∞:", e)
        await query.message.reply_text(WELCOME_TEXT, reply_markup=InlineKeyboardMarkup(MAIN_BUTTONS))

        try:
            with open("welcome.mp4", "rb") as video:
                await query.message.reply_video(video)
        except Exception as e:
            print("–ù–µ –º–æ–∂–∞ –¥–∞ –∏–∑–ø—Ä–∞—Ç–∏ –≤–∏–¥–µ–æ—Ç–æ:", e)
            await query.message.reply_text("üé• –í–∏–¥–µ–æ –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–æ –∏–ª–∏ –Ω–µ –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –∏–∑–ø—Ä–∞—Ç–µ–Ω–æ.")

    elif data == "company":
        await query.edit_message_text(COMPANY_TEXT, reply_markup=InlineKeyboardMarkup(MAIN_BUTTONS))

    elif data == "products":
        await query.edit_message_text(PRODUCTS_TEXT, reply_markup=InlineKeyboardMarkup(MAIN_BUTTONS))

    elif data.startswith("marketing_"):
        step = int(data.split("_")[1])
        buttons = []
        if step > 0:
            buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"marketing_{step - 1}"))
        if step < len(MARKETING_STEPS) - 1:
            buttons.append(InlineKeyboardButton("–ù–∞–ø—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"marketing_{step + 1}"))
        else:
            buttons = [
                InlineKeyboardButton("üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–π —Å–µ –±–µ–∑–ø–ª–∞—Ç–Ω–æ", url="https://livegoodtour.com/ilyyy12"),
                InlineKeyboardButton("üì≤ –°–æ—Ü–∏–∞–ª–Ω–∏ –º—Ä–µ–∂–∏", callback_data="contact")
            ]

        await query.edit_message_text(MARKETING_STEPS[step], reply_markup=InlineKeyboardMarkup([buttons]))

    elif data == "contact":
        combined_buttons = SOCIAL_BUTTONS + MAIN_BUTTONS
        await query.edit_message_text("üìû –°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –º–µ–Ω —á—Ä–µ–∑ –±—É—Ç–æ–Ω–∏—Ç–µ –ø–æ-–¥–æ–ª—É üëá", reply_markup=InlineKeyboardMarkup(combined_buttons))

# --- Set up Telegram bot application ---

telegram_app = ApplicationBuilder().token(TOKEN).build()

telegram_app.add_handler(CommandHandler("start", start))
telegram_app.add_handler(CallbackQueryHandler(handle_buttons))
telegram_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

# --- FastAPI app ---

app = FastAPI()

@app.on_event("startup")
async def on_startup():
    await telegram_app.initialize()   # <--- –¢–£–ö –¥–æ–±–∞–≤–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è—Ç–∞

@app.post("/webhook")
async def telegram_webhook(request: Request):
    data = await request.json()
    update = Update.de_json(data, telegram_app.bot)
    await telegram_app.process_update(update)
    return {"ok": True}

# --- Run only locally with polling (optional) ---

if __name__ == "__main__":
    print("–ó–∞–ø–æ—á–≤–∞ polling (—Å–∞–º–æ –∑–∞ –ª–æ–∫–∞–ª–Ω–æ –ø–æ–ª–∑–≤–∞–Ω–µ)")
    telegram_app.run_polling()
